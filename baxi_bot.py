from telegram import Update
from telegram.ext import Application, MessageHandler, filters
import sqlite3
from openai import OpenAI

import os
openai.api_key = os.getenv("OPENAI_API_KEY")

# üîç –ü–æ–∏—Å–∫ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def search_in_db(query):
    conn = sqlite3.connect("knowledge_base.db")
    c = conn.cursor()
    try:
        c.execute('''
            SELECT pdf_name, content FROM pdf_data 
            WHERE content LIKE ?
        ''', ('%' + query + '%',))
        results = c.fetchall()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ –±–∞–∑–µ: {e}")
        results = None
    finally:
        conn.close()
    return results if results else None

# üß† –ó–∞–ø—Ä–æ—Å –∫ GPT
def ask_gpt(query):
    try:
        response = client.chat.completions.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–¢—ã —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–π –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–ª–µ—Å–∞—Ä–µ–π, –æ—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É."},
                {"role": "user", "content": query},
            ]
        )
        return response.choices[0].message.content.strip()
    except Exception as e:
        return f"–û—à–∏–±–∫–∞ GPT: {e}"

# üí¨ –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def handle_message(update: Update, context):
    query = update.message.text
    results = search_in_db(query)

    if results:
        response = "–í–æ—Ç —á—Ç–æ —è –Ω–∞—à–µ–ª –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π:\n"
        for pdf_name, content in results:
            response += f"\nüìÑ –î–æ–∫—É–º–µ–Ω—Ç: {pdf_name}\nüìù {content[:500]}...\n"
    else:
        gpt_answer = ask_gpt(query)
        response = f"–í –±–∞–∑–µ –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ, –≤–æ—Ç –æ—Ç–≤–µ—Ç –æ—Ç –Ω–µ–π—Ä–æ—Å–µ—Ç–∏:\n\n{gpt_answer}"

    # –†–∞–∑–±–∏–≤–∫–∞ –¥–ª–∏–Ω–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    max_len = 4000
    for i in range(0, len(response), max_len):
        await update.message.reply_text(response[i:i+max_len])

# üöÄ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    application = Application.builder().token("7595091573:AAGEwZEgJtGQXDyjejHz8Ln00-0v5p1I2TA").build()
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_message))
    application.run_polling(timeout=30)

if __name__ == '__main__':
    main()
